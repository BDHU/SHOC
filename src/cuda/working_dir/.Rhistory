theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
ylab("Speedup") +
geom_line() +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ylab("Speedup") +
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_discrete(breaks=c(1,3,7,10)) +
ylab("Speedup") +
geom_line() +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(1,3,7,10)) +
ylab("Speedup") +
geom_line() +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10)) +
ylab("Speedup") +
geom_line() +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12)) +
ylab("Speedup") +
geom_line() +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12)) +
ylab("Speedup") +
geom_line(color="blue") +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12)) +
ylab("Speedup") +
geom_line(color="dodgerblue66") +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point() +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=hyperq, aes(x=hyperq_row_names, y = hype)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
# srad
srad_row_names <- c(seq(0, 16, by=1))
srad <- data.frame(
srad_row_names,
hype=c(1.15, 1.148, 0.969, 1.039, 1.049, 1.011, 1.008, 1.026, 1.13, 1.16, 1.151, 0.876, 0.891, 0.890, 0.921,0.956)
)
ggplot(data=srad, aes(x=srad_row_names, y = sradv)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
srad <- data.frame(
srad_row_names,
sradv=c(1.15, 1.148, 0.969, 1.039, 1.049, 1.011, 1.008, 1.026, 1.13, 1.16, 1.151, 0.876, 0.891, 0.890, 0.921,0.956)
)
# srad
srad_row_names <- c(seq(1, 16, by=1))
srad <- data.frame(
srad_row_names,
sradv=c(1.15, 1.148, 0.969, 1.039, 1.049, 1.011, 1.008, 1.026, 1.13, 1.16, 1.151, 0.876, 0.891, 0.890, 0.921,0.956)
)
ggplot(data=srad, aes(x=srad_row_names, y = sradv)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=srad, aes(x=srad_row_names, y = sradv)) +
xlab("Number of Instances (Power of 2)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=srad, aes(x=srad_row_names, y = sradv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
# mandelbrot
mand_row_names <- c(seq(5, 13, by=1))
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.445, 0.52, 1.43, 2.492, 3.12, 5.51)
)
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.42, 0.52, 1.43, 2.492, 3.12, 5.51)
)
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
#barplot(zemaitis_feature_turned_on, main="Car Distribution by Gears and VS",
#        xlab="Number of Gears", col=c("darkblue","red"),
#        legend = colnames(data_ff), beside=TRUE)
summary(new_d.pr)
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.38, 0.54, 1.43, 2.492, 3.12, 5.51)
)
# mandelbrot
mand_row_names <- c(seq(5, 13, by=1))
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.38, 0.54, 1.43, 2.492, 3.12, 5.51)
)
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.38, 0.57, 1.43, 2.492, 3.12, 5.51)
)
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.38, 0.57, 1.43, 2.492, 3.12, 5.51)
)
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.38, 0.61, 1.43, 2.492, 3.12, 5.51)
)
# mandelbrot
mand_row_names <- c(seq(5, 13, by=1))
mand <- data.frame(
mand_row_names,
mandv=c(0.09, 0.11, 0.11, 0.38, 0.61, 1.43, 2.492, 3.12, 5.51)
)
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(0,2,4,6,8,10,12,14,16)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(5,6,7,8,9,10)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(5,6,7,8,9,10,11,12,13)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(5,6,7,8,9,10,11,12,13)) +
scale_y_continuous(breaks=c(1.0,2.0,3,4,5,6)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(5,6,7,8,9,10,11,12,13)) +
scale_y_continuous(breaks=c(1.0,2.0,3,4,5,6.0)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Multiple of 16)") +
scale_x_continuous(breaks=c(5,6,7,8,9,10,11,12,13)) +
scale_y_continuous(breaks=c(0,1.0,2.0,3,4,5,6.0)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
ggplot(data=mand, aes(x=mand_row_names, y = mandv)) +
xlab("Image Dimension (Power of 2)") +
scale_x_continuous(breaks=c(5,6,7,8,9,10,11,12,13)) +
scale_y_continuous(breaks=c(0,1.0,2.0,3,4,5,6.0)) +
ylab("Speedup") +
geom_line(color="dodgerblue2") +
geom_point(color="dodgerblue2") +
theme_minimal() +
theme(legend.key.size = unit(0.2, "cm"),
legend.position=c(0.18, 0.8), legend.box = "vertical", legend.title = element_blank(),
legend.box.background = element_rect(colour = "gray")) +
theme(plot.margin = unit(c(0.1,0,0,0), "cm"))
library(devtools)
library(ggbiplot)
library(rgl)
library("plot3D")
library("factoextra")
library(corrplot)
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data_small <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
data_big <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d_small <- data_small[,!apply(data_small, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
new_d_big <- data_big[,!apply(data_big, MARGIN = 2, function(y) max(y, na.rm = TRUE) == min(y, na.rm = TRUE))]
final_small <- subset(new_d_small, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_big <- subset(new_d_big, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_small.pr <- prcomp(final_small[1:num_bench, 2:ncol(final_small)], center=TRUE, scale = TRUE)
final_big.pr <- prcomp(final_big[1:num_bench, 2:ncol(final_big)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final_small))
scores_small <- as.data.frame(final_small.pr$x)
scores_big <- as.data.frame(final_big.pr$x)
summary(final_big.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,7,8,9,10,11,12),1], pos = 3, color="red")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,7,8,10,11,12,13),1], pos = 3)
source('~/Desktop/SHOC/src/cuda/working_dir/processing.R')
install.packages("devtools")
install.packages("rgl")
install.packages("plot3D")
install.packages(c("FactoMineR", "factoextra"))
install.packages("corrplot")
install.packages("ggthemes")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,7,8,9,10,11,12),1], pos = 3, color="red")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,7,8,9,10,11,12),1], pos = 3, color="red")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,7,8,9,10,11,12),1], pos = 3, color="red")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,7,8,9,10,11,12),1], pos = 3, color="red")
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data_small <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
data_big <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d_small <- data_small[,!apply(data_small, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
new_d_big <- data_big[,!apply(data_big, MARGIN = 2, function(y) max(y, na.rm = TRUE) == min(y, na.rm = TRUE))]
final_small <- subset(new_d_small, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_big <- subset(new_d_big, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_small.pr <- prcomp(final_small[1:num_bench, 2:ncol(final_small)], center=TRUE, scale = TRUE)
final_big.pr <- prcomp(final_big[1:num_bench, 2:ncol(final_big)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final_small))
scores_small <- as.data.frame(final_small.pr$x)
scores_big <- as.data.frame(final_big.pr$x)
summary(final_big.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,7,8,9,10,11,12),1], pos = 3, color="red")
View(scores_big)
View(scores_small)
View(data_big)
View(data_small)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,6,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,6,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,7,8,9,10,11,12),1], pos = 3, color="red")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(2,6,7,8,10,11,12,13), 1:3], texts=data_small[-c(2,6,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,5,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,5,7,8,9,10,11,12),1], pos = 3, color="red")
text3d(scores_small[-c(6,7,8,10,11,12,13), 1:3], texts=data_small[-c(6,7,8,10,11,12,13),1], pos = 3)
text3d(scores_small[-c(7,8,10,11,12,13), 1:3], texts=data_small[-c(7,8,10,11,12,13),1], pos = 3)
text3d(scores_small[-c(6,7,10,11,12,13), 1:3], texts=data_small[-c(6,7,10,11,12,13),1], pos = 3)
text3d(scores_small[-c(6,7,8,11,12,13), 1:3], texts=data_small[-c(6,7,8,11,12,13),1], pos = 3)
text3d(scores_small[-c(6,7,8,10,12,13), 1:3], texts=data_small[-c(6,7,8,10,12,13),1], pos = 3)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(6,7,8,10,11,12,13), 1:3], texts=data_small[-c(6,7,8,10,11,12,13),1], pos = 3)
text3d(scores_big[-c(1,2,4,5,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,5,7,8,9,10,11,12),1], pos = 3, color="red")
text3d(scores_small[-c(6,7,8,10,11,13), 1:3], texts=data_small[-c(6,7,8,10,11,13),1], pos = 3)
text3d(scores_small[-c(6,7,8,10,11), 1:3], texts=data_small[-c(6,7,8,10,11),1], pos = 3)
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data_small <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
data_big <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d_small <- data_small[,!apply(data_small, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
new_d_big <- data_big[,!apply(data_big, MARGIN = 2, function(y) max(y, na.rm = TRUE) == min(y, na.rm = TRUE))]
final_small <- subset(new_d_small, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_big <- subset(new_d_big, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_small.pr <- prcomp(final_small[1:num_bench, 2:ncol(final_small)], center=TRUE, scale = TRUE)
final_big.pr <- prcomp(final_big[1:num_bench, 2:ncol(final_big)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final_small))
scores_small <- as.data.frame(final_small.pr$x)
scores_big <- as.data.frame(final_big.pr$x)
summary(final_big.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[-c(6,7,8,10,11), 1:3], texts=data_small[-c(6,7,8,10,11),1], pos = 3)
text3d(scores_big[-c(1,2,4,5,7,8,9,10,11,12), 1:3], texts=data_big[-c(1,2,4,5,7,8,9,10,11,12),1], pos = 3, color="red")
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
#rgl.postscript("pca_shoc_small.eps", "eps")
#rgl.postscript("pca_shoc_big.pdf", "pdf")
rgl.postscript("shoc_pca_dual.pdf", "pdf")
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
#rgl.postscript("pca_shoc_small.eps", "eps")
#rgl.postscript("pca_shoc_big.pdf", "pdf")
rgl.postscript("shoc_pca_dual.eps", "eps")
