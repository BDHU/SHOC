library(devtools)
library(ggbiplot)
library(rgl)
library("plot3D")
library("factoextra")
library(corrplot)
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, global_reduction_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput, l2_atomic_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, atomic_transactions, atomic_transactions_per_request, l2_atomic_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
View(new_d)
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, global_reduction_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput, l2_atomic_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, atomic_transactions, atomic_transactions_per_request, l2_atomic_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput, l2_atomic_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, atomic_transactions, atomic_transactions_per_request, l2_atomic_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, atomic_transactions, atomic_transactions_per_request, l2_atomic_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, atomic_transactions_per_request, l2_atomic_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_atomic_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
#text3d(scores[, 1:3], texts=data[,1], pos = 3)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
rgl.postscript("pca_rodinia.eps", "eps")
fviz_eig(final.pr, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(final.pr)
fviz_contrib(final.pr, choice = "var", axes = 3, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 1, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 2, top = ncol(final), xtickslab.rt = 65)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
rgl.postscript("pca_shoc_small.eps", "eps")
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
rgl.postscript("pca_shoc_small.eps", "eps")
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
rgl.postscript("pca_shoc_big.eps", "eps")
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
rgl.postscript("pca_shoc_small.eps", "eps")
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
rgl.postscript("pca_shoc_small.eps", "eps")
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
rgl.postscript("pca_shoc_small.eps", "eps")
fviz_eig(final.pr, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(final.pr)
fviz_contrib(final.pr, choice = "var", axes = 2, top = ncol(final), xtickslab.rt = 65)
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
fviz_eig(final.pr, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(final.pr)
fviz_contrib(final.pr, choice = "var", axes = 2, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 1, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 2, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 3, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 4, top = ncol(final), xtickslab.rt = 65)
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
fviz_eig(final.pr, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(final.pr)
fviz_contrib(final.pr, choice = "var", axes = 4, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 1, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 2, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 3, top = ncol(final), xtickslab.rt = 65)
fviz_contrib(final.pr, choice = "var", axes = 4, top = ncol(final), xtickslab.rt = 65)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
#rgl.postscript("pca_shoc_small.eps", "eps")
rgl.postscript("pca_shoc_small.png", "png")
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
#rgl.postscript("pca_shoc_small.eps", "eps")
rgl.postscript("pca_shoc_small.pdf", "pdf")
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#data.pr <- princomp(data[1:4, 1:4], cor = FALSE, scores = TRUE)
#num_data <- subset(data, select = -c(1))
print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d <- data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
final <- subset(new_d, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final.pr <- prcomp(final[1:num_bench, 2:ncol(final)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final))
scores <- as.data.frame(final.pr$x)
summary(final.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores[, 1:3], col=c(1:1),size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
#rgl.postscript("pca_shoc_small.eps", "eps")
rgl.postscript("pca_shoc_big.pdf", "pdf")
#data <- read.csv(file="/u/edwardhu/Desktop/all_metrics.csv",header = TRUE, sep = ",")
data_small <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_small_metrics.csv",header = TRUE, sep = ",")
data_big <- read.csv(file="/home/ed/Desktop/SHOC/src/cuda/all_big_metrics.csv",header = TRUE, sep = ",")
num_bench <- 14
#print(data[,!apply(data, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))])
new_d_small <- data_small[,!apply(data_small, MARGIN = 2, function(x) max(x, na.rm = TRUE) == min(x, na.rm = TRUE))]
new_d_big <- data_big[,!apply(data_big, MARGIN = 2, function(y) max(y, na.rm = TRUE) == min(y, na.rm = TRUE))]
View(new_d_big)
View(new_d_small)
final_small <- subset(new_d_small, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_big <- subset(new_d_big, select=-c(inst_misc, cf_issued, cf_executed, inst_issued, inst_executed, issue_slots, nvlink_total_data_received, nvlink_total_data_transmitted, pcie_total_data_transmitted, pcie_total_data_received, nvlink_receive_throughput, nvlink_transmit_throughput, stall_other, global_load_requests, local_load_requests, global_store_requests, local_store_requests, texture_load_requests, gld_requested_throughput, gst_requested_throughput, gld_throughput, gst_throughput, dram_read_throughput, dram_write_throughput, tex_cache_throughput, l2_tex_read_throughput, l2_tex_write_throughput, l2_read_throughput, l2_write_throughput, sysmem_write_throughput, local_load_throughput, local_store_throughput, shared_load_throughput, shared_store_throughput,                 shared_load_transactions_per_request, shared_store_transactions_per_request,local_store_transactions_per_request,gld_transactions_per_request,gst_transactions_per_request,shared_store_transactions,shared_load_transactions,local_load_transactions,local_store_transactions, gld_transactions, gst_transactions, l2_read_transactions, l2_write_transactions, dram_read_transactions, dram_write_transactions, tex_cache_transactions, l2_tex_read_transactions, l2_tex_write_transactions, l2_global_load_bytes, l2_local_load_bytes, dram_read_bytes, dram_write_bytes, l2_local_global_store_bytes))
final_small.pr <- prcomp(final_small[1:num_bench, 2:ncol(final_small)], center=TRUE, scale = TRUE)
final_big.pr <- prcomp(final_big[1:num_bench, 2:ncol(final_big)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final_small))
scores_small <- as.data.frame(final_small.pr$x)
scores_big <- as.data.frame(final_big.pr$x)
summary(final_big.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p', add=TRUE)
plot3d(scores_big[, 1:3], col='red',size=6,type='p', add=TRUE)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p', add=TRUE)
plot3d(scores_big[, 1:3], col=c(2:2),size=6,type='p', add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final_small))
scores_small <- as.data.frame(final_small.pr$x)
scores_big <- as.data.frame(final_big.pr$x)
summary(final_big.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p', add=TRUE)
final_small.pr <- prcomp(final_small[1:num_bench, 2:ncol(final_small)], center=TRUE, scale = TRUE)
final_big.pr <- prcomp(final_big[1:num_bench, 2:ncol(final_big)], center=TRUE, scale = TRUE)
#print(new_d[1:num_bench, c("inst_per_warp", "ipc")])
print(ncol(final_small))
scores_small <- as.data.frame(final_small.pr$x)
scores_big <- as.data.frame(final_big.pr$x)
summary(final_big.pr)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
#plot3d(scores_big[, 1:3], col='red',size=6,type='p', add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p',add=TRUE)
plot3d(scores_big[, 1:3], col='red',size=6,type='p')
view3d( theta = -55, phi = 23, zoom=0.78)
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p',add=TRUE)
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p')
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p',add=TRUE)
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores[, 1:3], texts=data[,1], pos = 3)
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p',add=TRUE)
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[, 1:3], texts=data[,1], pos = 3)
text3d(scores_big[, 1:3], texts=data[,1], pos = 3, color="read")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[, 1:3], texts=data[,1], pos = 3)
text3d(scores_big[, 1:3], texts=data[,1], pos = 3, color="read")
text3d(scores_big[, 1:3], texts=data[,1], pos = 3, color="red")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[, 1:3], texts=data[,1], pos = 3)
text3d(scores_big[, 1:3], texts=data[,1], pos = 3, color="red")
#ggbiplot(final.pr, choices = c(1,2), labels = final[, 1], var.axes = F, labels.size = 3)
par3d(windowRect = c(2309, 160, 2808, 594))
plot3d(scores_small[, 1:3], col=c(1:1),size=6,type='p')
plot3d(scores_big[, 1:3], col=(2:2),size=6,type='p',add=TRUE)
view3d( theta = -55, phi = 23, zoom=0.78)
par3d("windowRect")
text3d(scores_small[, 1:3], texts=data[,1], pos = 3)
text3d(scores_big[, 1:3], texts=data[,1], pos = 3, color="red")
#score_to_disp <- subset(scores, select=-c(1))
#label_to_disp <- data[-c(1),]
#text3d(scores[-c(1,3,4,5,10,20,22,23),1:3],texts=data[-c(1,3,4,5,10,20,22,23),1], pos=3)
#rgl.postscript("pca_shoc_small.eps", "eps")
#rgl.postscript("pca_shoc_big.pdf", "pdf")
rgl.postscript("shoc_pca.pdf", "pdf")
